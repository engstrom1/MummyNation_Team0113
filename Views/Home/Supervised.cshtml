@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<style>
    body {
        padding-top: 150px;
        background-color: #F2D492;
        color: black;
    }

    input[type="submit"] {
        background-color: #283845;
        color: white;
        border: none;
        border-radius: 4px;
    }
    .response {
        background-color: white;
    }


</style>
<div style="padding-left:50px;">
    <div style="padding-right:50px;">
<div class="row" style="padding-bottom: 75px;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="section-title" data-aos="fade-in" data-aos-delay="100">
                <h2>Our Prediction Model</h2>
                <p> Behind the scenes, this input box runs an algorithm that was trained on existing data and can predict which way the mummy's head is lying. Input your values and find out which way your mummy is most likely to be facing, based on BYU research done in the Fag el-Gamous region.</p>
            </div>
            <form onsubmit="submitForm(); return false;" id="inputForm">
                <div class="row">
      <div class="col-md-4 mb-3">
      <label for="square-north-south">Square North South</label>
                        <input type="number" class="form-control" id="square-north-south" name="squarenorthsouth" value="0" required>
    </div>
    <div class="col-md-4 mb-3">
      <label for="depth">Depth</label>
                        <input type="number" step="0.01" class="form-control" id="depth" value="0" name="depth" required>
    </div>
  </div>
  <div class="row">
    <div class="col-md-4 mb-3">
      <label for="south-to-head">South To Head</label>
                        <input type="number" value="0" step="0.01" class="form-control" id="south-to-head" name="southtohead" required>
    </div>
    <div class="col-md-4 mb-3">
      <label for="square-east-west">Square East West</label>
                        <input type="number" value="0" class="form-control" id="square-east-west" name="squareeastwest" required>
    </div>
    <div class="col-md-4 mb-3">
      <label for="west-to-head">West To Head</label>
                        <input type="number" step="0.01" value="0" class="form-control" id="west-to-head" name="westtohead" required>
    </div>
  </div>
  <div class="row">
    <div class="col-md-4 mb-3">
      <label for="length">Length</label>
                        <input type="number" step="0.01" value="0" class="form-control" id="length" name="length" required>
    </div>
    <div class="col-md-4 mb-3">
      <label for="west-to-feet">West To Feet</label>
                        <input type="number" step="0.01" value="0" class="form-control" id="west-to-feet" name="westtofeet" required>
    </div>
    <div class="col-md-4 mb-3">
      <label for="south-to-feet">South To Feet</label>
                        <input type="number" step="0.01" value="0" class="form-control" id="south-to-feet" name="southtofeet" required>
    </div>
  </div>
  <div class="row">
    <div class="col-md-4 mb-3">
      <label for="textiles">Textiles</label>
                        <input type="number" value="0" class="form-control" id="textiles" name="textiles" required>
    </div>
    <div class="col-md-4 mb-3">
      <label for="negative-south-to-head">Negative South To Head</label>
                        <input type="number" value="0" step="0.01" class="form-control" id="negative-south-to-head" name="negative_southtohead" required>
    </div>
                    <div class="col-md-4 mb-3">
                        <label for="negative-south-to-feet">Negative South To Feet</label>
                        <input type="number" value="0" step="0.01" class="form-control" id="negative-south-to-feet" name="negative_southtofeet" required>
                    </div>
    </div>
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label for="negative-south-to-head">Negative West To Head</label>
                        <input type="number" value="0" class="form-control" id="NegativeWestToHead" name="negative_westtohead" required>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="negative-west-to-feet">Negative West To Feet</label>
                        <input type="number" value="0" step="0.01" class="form-control" id="negative-south-to-head" name="negative_westtofeet" required>
                    </div>
                    </div>
                <div class="error" id="errorDiv"></div>

                <button type="submit" class="btn btn-primary">Submit</button>

                </form>
                <div class="container" data-aos="zoom-in">
                    <div class="text-center">
                        <h1 id="response"></h1>
                    </div>
                </div>
</div>
    </div>
</div>
</div>
</div>

<script>
    async function submitForm() {

        const form = document.querySelector('#inputForm');
        const formData = new FormData(form);

        const json = {};
        formData.forEach((value, key) => {
            if (!isNaN(value)) { // Check if value is a number
                if (value % 1 === 0) { // Check if value is a whole number
                    value = value + ".0"; // Add .0 to whole numbers
                }
                value = parseFloat(value); // Convert value to float
            }
            json[key] = value;
        });
        const jsonString = JSON.stringify(json);
        try {
            // send the POST request to the URL
            const response = await fetch("https://localhost:44343/score", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: jsonString
            });

            // get the response content as a string
            const responseString = await response.text();
        

            let trimmedString = responseString.substring(19, responseString.length - 2);
            if (trimmedString == "E") {
                trimmedString = "East"
            } else {
                trimmedString = "West"
            }
            displayString = "We predict that the mummy's head will be facing: "  + trimmedString 

            document.getElementById("response").innerHTML = displayString
        } catch (error) {
        //    // handle the exception
            console.error(error);
        }
    }
</script>